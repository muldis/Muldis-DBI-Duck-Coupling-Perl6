=pod

=encoding utf8

=head1 NAME

Muldis::DBI::Duck_Coupling -
Formal spec of a duck-coupling database interface for Perl 6

=head1 VERSION

This document is Muldis::DBI::Duck_Coupling version 0.1.0.-9 for Perl 6.

=head1 PREFACE

This document is hereby proposed as the official Perl 6 successor to the
Perl 5 L<DBI> library, and thus is formally proposed to take the Perl 6
namespace C<DBI> in place of its current C<Muldis::DBI::Duck_Coupling> name.

Said project rename is subject to approval by Tim Bunce (author of L<DBI>)
and the community, who are invited to take co-ownership of it and further
evolve it as necessary to satisfy the requirements of an official C<DBI>.

Similarly, it is suggested that any versions of existing Perl 5 C<DBD::*>
modules adapted to this new C<DBI> would by default have their
corresponding Perl 6 C<DBD::*> names, though they can also be free to pick
new names of their choosing, as this new C<DBI> would not place any
requirements on implementing modules' names.

If this proposal is rejected, the current name
C<Muldis::DBI::Duck_Coupling> can continue to be used going forward.

A corresponding Perl 5 version of this document is also being co-developed
and is intended to be named similarly to the Perl 6 one.

=head1 SYNOPSIS

I<This documentation is pending.>

=head1 DESCRIPTION

This document is the human readable authoritative formal specification of
the B<Muldis Duck Coupling DBI> (B<MDCDBI>) library API for Perl 6.

The fully-qualified name of this document and the library API specification
it contains is
C<Muldis_DBI_Duck_Coupling_Perl6;;"http://muldis.com";;"0.1.0.-9">.  It is
the official/original (not embraced and extended) Muldis Duck Coupling DBI
library API specification by the authority Muldis Data Systems
(C<http://muldis.com>), version number C<0.1.0.-9> (this number matches the
VERSION in this file).

The Muldis Duck Coupling DBI specification for Perl 6 is expressly designed
to be compatible with the B<Muldis D> language specification (see
L<Muldis::D>), version C<Muldis_D;;"http://muldis.com";;"0.201.0.-9"> in
particular; however the two are also mutually independent by design.
Iff Perl 6 libraries that implement the MDCDBI choose to explicitly support
using the Muldis D language with it, then certain parts of the MDCDBI
specification would apply to them, and otherwise not.

I<This documentation is pending.>

=head1 OVERVIEW

I<This documentation is pending.>

I<TODO: The API details would be described partly in terms of a fake
example Perl 6 library implementing it, where the given example code uses
the regular Perl 6 subroutine signature syntax and which uses lots of the
"..." yada-yada syntax.>

I<Conforming to this API doesn't preclude the implementer from providing
additional classes and routines, it just requires that a specific subset
exists among those; an implementer can add proprietary features that may create
lock-in if used, but if users stick to what the API mandates then they shouldn't
be (as) locked-in.>

=head1 VERSIONING

I<This documentation is pending.>

=head1 SEE ALSO

The separate all-documentation distribution L<Muldis::D> is the formal
specification of the B<Muldis D> language and its intended operating
environment, which the Muldis::DBI::Duck_Coupling API specification is
co-developed with and designed to be compatible with.

=head1 AUTHOR

Darren Duncan (C<darren@DarrenDuncan.net>)

=head1 LICENSE AND COPYRIGHT

This file is part of the formal specification of the the B<Muldis Duck
Coupling DBI> (B<MDCDBI>) library API for Perl 6.

MDCDBI is Copyright Â© 2002-2016, Muldis Data Systems, Inc.

L<http://www.muldis.com/>

MDCDBI is free documentation for software; you can redistribute it and/or
modify it under the terms of the Artistic License version 2 (AL2) as
published by the Perl Foundation (L<http://www.perlfoundation.org/>).  You
should have received copies of the AL2 as part of the MDCDBI distribution,
in the file named "LICENSE/artistic-2_0.txt"; if not, see
L<http://www.perlfoundation.org/attachment/legal/artistic-2_0.txt>.

Any versions of MDCDBI that you modify and distribute must carry prominent
notices stating that you changed the files and the date of any changes, in
addition to preserving this original copyright notice and other credits.

While it is by no means required, the copyright holder of MDCDBI would
appreciate being informed any time you create a modified version of MDCDBI
that you are willing to distribute, because that is a practical way of
suggesting improvements to the standard version.

=head1 TRADEMARK POLICY

MULDIS and MULDIS MULTIVERSE OF DISCOURSE are trademarks of Muldis Data
Systems, Inc. (L<http://www.muldis.com/>).  The trademarks apply to
computer database software and related services.  See
L<http://www.muldis.com/trademark_policy.html> for the full written details
of Muldis Data Systems' trademark policy.

The word MULDIS is intended to be used as the distinguishing brand name for
all the products and services of Muldis Data Systems.  So we would greatly
appreciate it if in general you do not incorporate the word MULDIS into the
name or logo of your website, business, product or service, but rather use
your own distinct name (exceptions appear below).  It is, however, always
okay to use the word MULDIS only in descriptions of your website, business,
product or service to provide accurate information to the public about
yourself.

If you do incorporate the word MULDIS into your names anyway, either
because you have permission from us or you have some other good reason,
then:  You must make clear that you are not Muldis Data Systems and that
you do not represent Muldis Data Systems.  A simple or conspicuous
disclaimer on your home page and product or service documentation is an
excellent way of doing that.

I<Further notes are TODO.>

=head1 ACKNOWLEDGEMENTS

None yet.

=head1 FORUMS

Several public email-based forums exist whose main topic is
the L<Muldis D|Muldis::D> language and its implementations, especially
the L<Muldis::D::RefEng> reference implementation, but also
the L<Set::Relation> module.  They exist so that users of Muldis D or
Muldis::D::RefEng can help each other, or so that help coming from the
projects' developers can be said once to many people, rather than
necessarily to each individually.  All of these you can reach via
L<http://mm.darrenduncan.net/mailman/listinfo>; go there to manage your
subscriptions to, or view the archives of, the following:

=over

=item C<muldis-db-announce@mm.darrenduncan.net>

This low-volume list is mainly for official announcements from Muldis D
language or implementation developers, though developers of related projects
can also post their announcements here.  This is not a discussion list.

=item C<muldis-db-users@mm.darrenduncan.net>

This list is for general discussion among people who are using Muldis D or
any of its implementations, especially the Muldis::D::RefEng reference
implementation.  This is the best place to ask for basic help in getting
Muldis::D::RefEng installed on your machine or to make it do what you want.
If you are in doubt on which list to use, then use this one by default.
You could also submit feature requests for Muldis D projects or report
perceived bugs here, if you don't want to use CPAN's RT system.

=item C<muldis-d-language@mm.darrenduncan.net>

This list is mainly for discussion among people who are designing the
Muldis D language specification, or who are implementing or adapting Muldis
D in some form, or who are writing Muldis D documentation, tests, or
examples.  It is not the main forum for any Muldis D implementations, nor
is it the place for non-implementers to get help in using said.

=item C<muldis-db-devel@mm.darrenduncan.net>

This list is for discussion among people who are designing or implementing
Muldis::D::RefEng, or other Muldis D implementations,
or who are writing Muldis::D::RefEng core documentation,
tests, or examples.  It is not the main forum for the Muldis D language
itself, nor is it the place for non-implementers to get help in using said.

=back

An official IRC channel for Muldis D and its implementations is also
intended, but not yet started.

Alternately, you can purchase more advanced commercial support for various
Muldis D implementations, particularly Muldis::D::RefEng, from its author by
way of Muldis Data Systems; see L<http://www.muldis.com/> for details.

=cut
